diff -ur nginx-1.15.10-orig/src/event/ngx_event_openssl.c nginx-1.15.10/src/event/ngx_event_openssl.c
--- nginx-1.15.10-orig/src/event/ngx_event_openssl.c	2019-03-26 07:06:55.000000000 -0700
+++ nginx-1.15.10/src/event/ngx_event_openssl.c	2019-06-19 13:54:56.701425609 -0700
@@ -18,6 +18,7 @@
 } ngx_openssl_conf_t;
 
 
+static int ngx_enable_fips_mode(ngx_log_t *log);
 static X509 *ngx_ssl_load_certificate(ngx_pool_t *pool, char **err,
     ngx_str_t *cert, STACK_OF(X509) **chain);
 static EVP_PKEY *ngx_ssl_load_certificate_key(ngx_pool_t *pool, char **err,
@@ -164,6 +165,10 @@
 
 #endif
 
+    if (!ngx_enable_fips_mode(log)) {
+        return NGX_ERROR;
+    }
+
 #if OPENSSL_VERSION_NUMBER >= 0x0090800fL
 #ifndef SSL_OP_NO_COMPRESSION
     {
@@ -602,6 +607,27 @@
     return NGX_OK;
 }
 
+
+static int
+ngx_enable_fips_mode(ngx_log_t *log)
+{
+    char *fips_env = getenv("FIPS_MODE");
+
+    if (fips_env && strcmp(fips_env, "0") == 0) {
+        ngx_write_stderr("FIPS mode disabled in configuration\n");
+        return NGX_OK;
+    }
+
+    if (!FIPS_mode_set(1)) {
+        ngx_log_error(NGX_LOG_ALERT, log, 0, "FIPS_mode_set(1) failed");
+        FIPS_mode_set(0);
+        return NGX_ERROR;
+    }
+
+    ngx_write_stderr("nginx running in FIPS mode\n");
+    return NGX_OK;
+}
+
 
 static X509 *
 ngx_ssl_load_certificate(ngx_pool_t *pool, char **err, ngx_str_t *cert,
Only in nginx-1.15.10/src/event: ngx_event_openssl.c.orig
Only in nginx-1.15.10/src/event: ngx_event_openssl.c.rej
